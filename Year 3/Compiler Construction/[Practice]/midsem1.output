Grammar

    0 $accept: X $end

    1 X: S X
    2  | S

    3 S: E
    4  | P

    5 EXPR_LINE: STR COMMA EXPR_LINE
    6          | STR

    7 E: VAR EQ SQLP EXPR_LINE SQRP

    8 P: PRINT LP VAR RP


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    VAR (258) 7 8
    EQ (259) 7
    SQLP (260) 7
    SQRP (261) 7
    LP (262) 8
    RP (263) 8
    PRINT (264) 8
    COMMA (265) 5
    STR (266) 5 6


Nonterminals, with rules where they appear

    $accept (12)
        on left: 0
    X (13)
        on left: 1 2
        on right: 0 1
    S (14)
        on left: 3 4
        on right: 1 2
    EXPR_LINE (15)
        on left: 5 6
        on right: 5 7
    E (16)
        on left: 7
        on right: 3
    P (17)
        on left: 8
        on right: 4


State 0

    0 $accept: • X $end

    VAR    shift, and go to state 1
    PRINT  shift, and go to state 2

    X  go to state 3
    S  go to state 4
    E  go to state 5
    P  go to state 6


State 1

    7 E: VAR • EQ SQLP EXPR_LINE SQRP

    EQ  shift, and go to state 7


State 2

    8 P: PRINT • LP VAR RP

    LP  shift, and go to state 8


State 3

    0 $accept: X • $end

    $end  shift, and go to state 9


State 4

    1 X: S • X
    2  | S •

    VAR    shift, and go to state 1
    PRINT  shift, and go to state 2

    $default  reduce using rule 2 (X)

    X  go to state 10
    S  go to state 4
    E  go to state 5
    P  go to state 6


State 5

    3 S: E •

    $default  reduce using rule 3 (S)


State 6

    4 S: P •

    $default  reduce using rule 4 (S)


State 7

    7 E: VAR EQ • SQLP EXPR_LINE SQRP

    SQLP  shift, and go to state 11


State 8

    8 P: PRINT LP • VAR RP

    VAR  shift, and go to state 12


State 9

    0 $accept: X $end •

    $default  accept


State 10

    1 X: S X •

    $default  reduce using rule 1 (X)


State 11

    7 E: VAR EQ SQLP • EXPR_LINE SQRP

    STR  shift, and go to state 13

    EXPR_LINE  go to state 14


State 12

    8 P: PRINT LP VAR • RP

    RP  shift, and go to state 15


State 13

    5 EXPR_LINE: STR • COMMA EXPR_LINE
    6          | STR •

    COMMA  shift, and go to state 16

    $default  reduce using rule 6 (EXPR_LINE)


State 14

    7 E: VAR EQ SQLP EXPR_LINE • SQRP

    SQRP  shift, and go to state 17


State 15

    8 P: PRINT LP VAR RP •

    $default  reduce using rule 8 (P)


State 16

    5 EXPR_LINE: STR COMMA • EXPR_LINE

    STR  shift, and go to state 13

    EXPR_LINE  go to state 18


State 17

    7 E: VAR EQ SQLP EXPR_LINE SQRP •

    $default  reduce using rule 7 (E)


State 18

    5 EXPR_LINE: STR COMMA EXPR_LINE •

    $default  reduce using rule 5 (EXPR_LINE)
